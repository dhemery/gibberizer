import org.gradle.api.tasks.testing.logging.TestExceptionFormat
import org.junit.platform.console.options.Details

import static org.gradle.api.JavaVersion.VERSION_1_9

buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath group: 'org.junit.platform', name: 'junit-platform-gradle-plugin', version: junitPlatformVersion
        classpath group: 'gradle.plugin.com.dorongold.plugins', name: 'task-tree'
    }
}

plugins {
    id 'java'
    id 'idea'
    id 'application'
    id 'com.dorongold.task-tree' version '1.3'
}

apply plugin: 'org.junit.platform.gradle.plugin'


ext {
    vendor = [name: 'Dale H. Emery', group: 'com.dhemery']
    apiGuardianVersion = '1.0.0'
    googleTruthVersion = '0.37'
    junitJupiterVersion = '5.0.2'
    junitPlatformVersion = '1.0.2'
}

group = vendor.group
description = 'Automated gibberish'
version = '1.0.0'
mainClassName = 'com.dhemery.gibberizer.application.GibberizerApplication'

targetCompatibility = sourceCompatibility = VERSION_1_9

repositories {
    jcenter()
}

dependencies {
    testCompileOnly group: 'org.apiguardian', name: 'apiguardian-api', version: apiGuardianVersion

    testCompile group: 'com.google.truth', name: 'truth', version: googleTruthVersion
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: junitJupiterVersion

    testRuntime group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: junitJupiterVersion
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

jar {
    manifest {
        attributes(
                'Implementation-Title': description,
                'Implementation-Version': version,
                'Implementation-Vendor': vendor.name,
                'Main-Class': mainClassName
        )
    }
}

javadoc {
    options.links << 'https://docs.oracle.com/javase/9/docs/api/'
}

junitPlatform {
    details = Details.TREE
}

test {
    testLogging {
        exceptionFormat = TestExceptionFormat.FULL
    }
}

artifacts {
    archives sourcesJar, javadocJar
}

defaultTasks clean.name, build.name
